^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Analyzing chain: ['LET', 'ZERO', ':=', '0', 'LET', 'ONE', ':=', '1', 'LET', 'TRUE', ':=', '1', 'LET', 'NVALS', ':=', '7', 'LET', 'K', ':=', 'ONE', 'INPUT:', 'GET', 'LIST', '(', 'K', ')', 'LET', 'K', ':=', 'K', '+', 'ONE', 'JUMP', 'OUTPUT', 'IF', 'K', '>', 'NVALS', 'JUMP', 'INPUT', 'IF', 'TRUE', 'OUTPUT:', 'LET', 'K', ':=', 'ONE', 'PUT', "'", 'The_Output_is', "'", 'LINE', 'OLOOP:', 'PUT', 'LIST', '(', 'K', ')', 'LINE', 'LET', 'K', ':=', 'K', '+', 'ONE', 'JUMP', 'DONE', 'IF', 'K', '>', 'NVALS', 'JUMP', 'OLOOP', 'IF', 'TRUE', 'DONE:', 'END']
--> Program ( current token: LET)
----> CC ( current token: LET)
------> comment ( current token: LET)
--------> semicolon ( current token: LET)
----> II ( current token: LET)
------> instr ( current token: LET)
--------> KEY ( current token: LET)
--------> term ( current token: ZERO)
----------> ident ( current token: ZERO)
----------> R1 ( current token: :=)
------------> lparent ( current token: :=)
--------> assignment ( current token: :=)
--------> R3 ( current token: 0)
----------> expr ( current token: 0)
------------> term ( current token: 0)
--------------> ident ( current token: 0)
------------> unop ( current token: 0)
----------> posint ( current token: 0)
------> II ( current token: LET)
--------> instr ( current token: LET)
----------> KEY ( current token: LET)
----------> term ( current token: ONE)
------------> ident ( current token: ONE)
------------> R1 ( current token: :=)
--------------> lparent ( current token: :=)
----------> assignment ( current token: :=)
----------> R3 ( current token: 1)
------------> expr ( current token: 1)
--------------> term ( current token: 1)
----------------> ident ( current token: 1)
--------------> unop ( current token: 1)
------------> posint ( current token: 1)
--------> II ( current token: LET)
----------> instr ( current token: LET)
------------> KEY ( current token: LET)
------------> term ( current token: TRUE)
--------------> ident ( current token: TRUE)
--------------> R1 ( current token: :=)
----------------> lparent ( current token: :=)
------------> assignment ( current token: :=)
------------> R3 ( current token: 1)
--------------> expr ( current token: 1)
----------------> term ( current token: 1)
------------------> ident ( current token: 1)
----------------> unop ( current token: 1)
--------------> posint ( current token: 1)
----------> II ( current token: LET)
------------> instr ( current token: LET)
--------------> KEY ( current token: LET)
--------------> term ( current token: NVALS)
----------------> ident ( current token: NVALS)
----------------> R1 ( current token: :=)
------------------> lparent ( current token: :=)
--------------> assignment ( current token: :=)
--------------> R3 ( current token: 7)
----------------> expr ( current token: 7)
------------------> term ( current token: 7)
--------------------> ident ( current token: 7)
------------------> unop ( current token: 7)
----------------> posint ( current token: 7)
------------> II ( current token: LET)
--------------> instr ( current token: LET)
----------------> KEY ( current token: LET)
----------------> term ( current token: K)
------------------> ident ( current token: K)
------------------> R1 ( current token: :=)
--------------------> lparent ( current token: :=)
----------------> assignment ( current token: :=)
----------------> R3 ( current token: ONE)
------------------> expr ( current token: ONE)
--------------------> term ( current token: ONE)
----------------------> ident ( current token: ONE)
----------------------> R1 ( current token: INPUT:)
------------------------> lparent ( current token: INPUT:)
--------------------> R2 ( current token: INPUT:)
----------------------> binop ( current token: INPUT:)
--------------> II ( current token: INPUT:)
----------------> instr ( current token: INPUT:)
------------------> KEY ( current token: INPUT:)
------------------> KEY ( current token: INPUT:)
------------------> KEY ( current token: INPUT:)
------------------> KEY ( current token: INPUT:)
------------------> KEY ( current token: INPUT:)
------------------> label ( current token: INPUT:)
----------------> II ( current token: GET)
------------------> instr ( current token: GET)
--------------------> KEY ( current token: GET)
--------------------> KEY ( current token: GET)
--------------------> KEY ( current token: GET)
--------------------> term ( current token: LIST)
----------------------> ident ( current token: LIST)
----------------------> R1 ( current token: ()
------------------------> lparent ( current token: ()
------------------------> ident ( current token: K)
------------------------> rparent ( current token: ))
------------------> II ( current token: LET)
--------------------> instr ( current token: LET)
----------------------> KEY ( current token: LET)
----------------------> term ( current token: K)
------------------------> ident ( current token: K)
------------------------> R1 ( current token: :=)
--------------------------> lparent ( current token: :=)
----------------------> assignment ( current token: :=)
----------------------> R3 ( current token: K)
------------------------> expr ( current token: K)
--------------------------> term ( current token: K)
----------------------------> ident ( current token: K)
----------------------------> R1 ( current token: +)
------------------------------> lparent ( current token: +)
--------------------------> R2 ( current token: +)
----------------------------> binop ( current token: +)
----------------------------> term ( current token: ONE)
------------------------------> ident ( current token: ONE)
------------------------------> R1 ( current token: JUMP)
--------------------------------> lparent ( current token: JUMP)
--------------------> II ( current token: JUMP)
----------------------> instr ( current token: JUMP)
------------------------> KEY ( current token: JUMP)
------------------------> KEY ( current token: JUMP)
------------------------> ident ( current token: OUTPUT)
------------------------> KEY ( current token: IF)
------------------------> expr ( current token: K)
--------------------------> term ( current token: K)
----------------------------> ident ( current token: K)
----------------------------> R1 ( current token: >)
------------------------------> lparent ( current token: >)
--------------------------> R2 ( current token: >)
----------------------------> binop ( current token: >)
----------------------------> term ( current token: NVALS)
------------------------------> ident ( current token: NVALS)
------------------------------> R1 ( current token: JUMP)
--------------------------------> lparent ( current token: JUMP)
----------------------> II ( current token: JUMP)
------------------------> instr ( current token: JUMP)
--------------------------> KEY ( current token: JUMP)
--------------------------> KEY ( current token: JUMP)
--------------------------> ident ( current token: INPUT)
--------------------------> KEY ( current token: IF)
--------------------------> expr ( current token: TRUE)
----------------------------> term ( current token: TRUE)
------------------------------> ident ( current token: TRUE)
------------------------------> R1 ( current token: OUTPUT:)
--------------------------------> lparent ( current token: OUTPUT:)
----------------------------> R2 ( current token: OUTPUT:)
------------------------------> binop ( current token: OUTPUT:)
------------------------> II ( current token: OUTPUT:)
--------------------------> instr ( current token: OUTPUT:)
----------------------------> KEY ( current token: OUTPUT:)
----------------------------> KEY ( current token: OUTPUT:)
----------------------------> KEY ( current token: OUTPUT:)
----------------------------> KEY ( current token: OUTPUT:)
----------------------------> KEY ( current token: OUTPUT:)
----------------------------> label ( current token: OUTPUT:)
--------------------------> II ( current token: LET)
----------------------------> instr ( current token: LET)
------------------------------> KEY ( current token: LET)
------------------------------> term ( current token: K)
--------------------------------> ident ( current token: K)
--------------------------------> R1 ( current token: :=)
----------------------------------> lparent ( current token: :=)
------------------------------> assignment ( current token: :=)
------------------------------> R3 ( current token: ONE)
--------------------------------> expr ( current token: ONE)
----------------------------------> term ( current token: ONE)
------------------------------------> ident ( current token: ONE)
------------------------------------> R1 ( current token: PUT)
--------------------------------------> lparent ( current token: PUT)
----------------------------------> R2 ( current token: PUT)
------------------------------------> binop ( current token: PUT)
----------------------------> II ( current token: PUT)
------------------------------> instr ( current token: PUT)
--------------------------------> KEY ( current token: PUT)
--------------------------------> KEY ( current token: PUT)
--------------------------------> KEY ( current token: PUT)
--------------------------------> KEY ( current token: PUT)
--------------------------------> term ( current token: ')
----------------------------------> ident ( current token: ')
--------------------------------> quote ( current token: ')
--------------------------------> string_ ( current token: The_Output_is)
--------------------------------> quote ( current token: ')
------------------------------> II ( current token: LINE)
--------------------------------> instr ( current token: LINE)
----------------------------------> KEY ( current token: LINE)
----------------------------------> KEY ( current token: LINE)
----------------------------------> KEY ( current token: LINE)
----------------------------------> KEY ( current token: LINE)
----------------------------------> KEY ( current token: LINE)
--------------------------------> II ( current token: OLOOP:)
----------------------------------> instr ( current token: OLOOP:)
------------------------------------> KEY ( current token: OLOOP:)
------------------------------------> KEY ( current token: OLOOP:)
------------------------------------> KEY ( current token: OLOOP:)
------------------------------------> KEY ( current token: OLOOP:)
------------------------------------> KEY ( current token: OLOOP:)
------------------------------------> label ( current token: OLOOP:)
----------------------------------> II ( current token: PUT)
------------------------------------> instr ( current token: PUT)
--------------------------------------> KEY ( current token: PUT)
--------------------------------------> KEY ( current token: PUT)
--------------------------------------> KEY ( current token: PUT)
--------------------------------------> KEY ( current token: PUT)
--------------------------------------> term ( current token: LIST)
----------------------------------------> ident ( current token: LIST)
----------------------------------------> R1 ( current token: ()
------------------------------------------> lparent ( current token: ()
------------------------------------------> ident ( current token: K)
------------------------------------------> rparent ( current token: ))
------------------------------------> II ( current token: LINE)
--------------------------------------> instr ( current token: LINE)
----------------------------------------> KEY ( current token: LINE)
----------------------------------------> KEY ( current token: LINE)
----------------------------------------> KEY ( current token: LINE)
----------------------------------------> KEY ( current token: LINE)
----------------------------------------> KEY ( current token: LINE)
--------------------------------------> II ( current token: LET)
----------------------------------------> instr ( current token: LET)
------------------------------------------> KEY ( current token: LET)
------------------------------------------> term ( current token: K)
--------------------------------------------> ident ( current token: K)
--------------------------------------------> R1 ( current token: :=)
----------------------------------------------> lparent ( current token: :=)
------------------------------------------> assignment ( current token: :=)
------------------------------------------> R3 ( current token: K)
--------------------------------------------> expr ( current token: K)
----------------------------------------------> term ( current token: K)
------------------------------------------------> ident ( current token: K)
------------------------------------------------> R1 ( current token: +)
--------------------------------------------------> lparent ( current token: +)
----------------------------------------------> R2 ( current token: +)
------------------------------------------------> binop ( current token: +)
------------------------------------------------> term ( current token: ONE)
--------------------------------------------------> ident ( current token: ONE)
--------------------------------------------------> R1 ( current token: JUMP)
----------------------------------------------------> lparent ( current token: JUMP)
----------------------------------------> II ( current token: JUMP)
------------------------------------------> instr ( current token: JUMP)
--------------------------------------------> KEY ( current token: JUMP)
--------------------------------------------> KEY ( current token: JUMP)
--------------------------------------------> ident ( current token: DONE)
--------------------------------------------> KEY ( current token: IF)
--------------------------------------------> expr ( current token: K)
----------------------------------------------> term ( current token: K)
------------------------------------------------> ident ( current token: K)
------------------------------------------------> R1 ( current token: >)
--------------------------------------------------> lparent ( current token: >)
----------------------------------------------> R2 ( current token: >)
------------------------------------------------> binop ( current token: >)
------------------------------------------------> term ( current token: NVALS)
--------------------------------------------------> ident ( current token: NVALS)
--------------------------------------------------> R1 ( current token: JUMP)
----------------------------------------------------> lparent ( current token: JUMP)
------------------------------------------> II ( current token: JUMP)
--------------------------------------------> instr ( current token: JUMP)
----------------------------------------------> KEY ( current token: JUMP)
----------------------------------------------> KEY ( current token: JUMP)
----------------------------------------------> ident ( current token: OLOOP)
----------------------------------------------> KEY ( current token: IF)
----------------------------------------------> expr ( current token: TRUE)
------------------------------------------------> term ( current token: TRUE)
--------------------------------------------------> ident ( current token: TRUE)
--------------------------------------------------> R1 ( current token: DONE:)
----------------------------------------------------> lparent ( current token: DONE:)
------------------------------------------------> R2 ( current token: DONE:)
--------------------------------------------------> binop ( current token: DONE:)
--------------------------------------------> II ( current token: DONE:)
----------------------------------------------> instr ( current token: DONE:)
------------------------------------------------> KEY ( current token: DONE:)
------------------------------------------------> KEY ( current token: DONE:)
------------------------------------------------> KEY ( current token: DONE:)
------------------------------------------------> KEY ( current token: DONE:)
------------------------------------------------> KEY ( current token: DONE:)
------------------------------------------------> label ( current token: DONE:)
----------------------------------------------> II ( current token: END)
------------------------------------------------> instr ( current token: END)
--------------------------------------------------> KEY ( current token: END)
--------------------------------------------------> KEY ( current token: END)
--------------------------------------------------> KEY ( current token: END)
--------------------------------------------------> KEY ( current token: END)
--------------------------------------------------> KEY ( current token: END)
--------------------------------------------------> label ( current token: END)
----> KEY ( current token: END)
-> CHAIN IS CORRECT!!!
No Errors occured!
